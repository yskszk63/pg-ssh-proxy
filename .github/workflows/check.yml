name: Check

on:
  pull_request:
  push:
    branches:
      - main

defaults:
  run:
    shell: bash

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: '^1.18.0'

      - run: gofmt -l -d .
      - run: go vet .

      - run: go test -race -covermode=atomic -coverprofile=coverage.out .
      - uses: codecov/codecov-action@v2

  test:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: '^1.18.0'

      - run: go test

  it:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
            #- macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: '^1.18.0'

      - run: go build
        env:
          CGO_ENABLED: '0'

      - run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keygen -t ed25519 -f ~/.ssh/id_ed25519
          cat ~/.ssh/id_ed25519.pub >> ~/.ssh/authorized_keys

      - run: |
          mkdir -p ~/.config
          cat > ~/.config/pg-ssh-proxy.toml << EOF
          [postgres]
          addr = "10.123.234.3"
          [postgres.ssh]
          addr = "10.123.234.2"
          user = "root"
          EOF

      - run: docker buildx build ci -t sshd
      - run: docker network create --subnet 10.123.234.0/24 mynet
      - run: docker run --rm --network mynet --ip 10.123.234.2 --mount type=bind,src=$HOME/.ssh,dst=/conf,readonly -d sshd
      - run: docker run --rm --network mynet --ip 10.123.234.3 --env POSTGRES_PASSWORD=secret -d postgres:latest
      - run: ssh-keyscan 10.123.234.2 >> ~/.ssh/known_hosts

      - run: sleep 1 #FIXME
      - run: ssh root@10.123.234.2 whoami
      - run: echo 'select version()' | psql --host=10.123.234.3 --username postgres
        env:
          PGPASSWORD: secret

      - run: ./pg-ssh-proxy &
      - run: sleep 1 #FIXME
      - run: echo 'select version()' | psql --host=localhost --username=postgres
        env:
          PGPASSWORD: secret
